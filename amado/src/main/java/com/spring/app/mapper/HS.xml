<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="HS">




<!-- <insert id="add_photofile" parameterType="PhotoVO">
insert into tbl_gym_photos(photo_id,fk_gymseq,several_photos)
values(seq_photo.nextval,#{fk_gymseq},#{several_photos})

</insert> -->


<!--  모든 상품 select 해오기  -->
	<select id="getAllGymList" resultType="GymVO" >
		select gymseq ,gymname,fk_userid,postcode,address,detailaddress,status,info,orgfilename,filename,filesize,cost,caution,membercount,likecount,insidestatus
		from tbl_gym
	</select>
	
	
	<select id="getGym" resultType="GymVO" parameterType="String">
		select gymseq ,gymname,fk_userid,postcode,address,detailaddress,status,info,orgfilename,filename,filesize,cost,caution,membercount,likecount,insidestatus,lng,lat
		from tbl_gym
		where gymseq= #{gymseq}
	</select>
	
	
	<resultMap type="HashMap" id="gymImgMap">
		<result column="gymimgseq" property="gymimgseq" javaType="String"/>
		<result column="gymseq" property="gymseq" javaType="String"/>
		<result column="filename" property="filename" javaType="String"/>
		<result column="orgfilename" property="orgfilename" javaType="String"/>
	</resultMap>
	<select id="getGymimg" resultMap="gymImgMap" parameterType="String">
			select gymimgseq,gymseq,filename,orgfilename    
			from tbl_gymimg
			where gymseq= #{gymseq}
	</select>
	
	
	
	
	<!--  gymseq 에 따라 상세정보 보여주기  -->
<!-- 	<select id="getAllGymList2" resultType="GymVO" >
	   SELECT g.gymseq,g.gymname,
       g.fk_userid,g.postcode,g.address,
       g.detailaddress,g.status,
       g.info,g.cost,g.caution,
       g.membercount,g.likecount,g.insidestatus,
       g.orgfilename AS gym_orgfilename,g.filename AS gym_filename,
       g.filesize AS gym_filesize,g.lat,g.lng,
       gi.orgfilename AS gymimg_orgfilename
  	   FROM tbl_gym g
  	   LEFT JOIN tbl_gymimg gi
  	   ON g.gymseq = gi.gymseq
 	   WHERE g.gymseq = ${g.gymseq};
	</select> -->
	
	

<!-- #88. 댓글쓰기 (tbl_comment 테이블에 insert) -->
	<insert id="addComment" parameterType="QuestionVO">
		insert into tbl_gymquestion(gymquestionseq, gymseq, content, registerdate, fk_userid)
		values(seq_gymquestion.nextval, #{gymseq}, #{content}, sysdate, #{fk_userid})
	</insert>
	
	<!-- #89-1. tbl_board 테이블에 commentCount 컬럼이 1증가(update) -->
	<update id="updateCommentCount" parameterType="String">
		update tbl_gym set commentcount = commentcount+1
		where gymseq = #{gymseq}
	</update>
	

	<!-- === #93. 원게시물에 딸린 댓글들을 조회해오기 === -->
    <!-- 첨부파일이 없는 경우  -->
    <select id="getCommentList" parameterType="String" resultType="QuestionVO">
		select gymquestionseq, fk_userid,category, content, changestatus
		     , to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') AS registerdate
             , V.memberimg
		from tbl_gymquestion A join tbl_member V
		ON A.fk_userid = V.userid
		where A.gymseq = #{parentSeq}
		order by gymquestionseq desc
    </select>


	<update id="updateComment" parameterType="HashMap">
        update tbl_gymquestion set content = #{content}, registerdate = sysdate, changestatus = 1
        where gymquestionseq = #{gymquestionseq}
    </update>

    <delete id="deleteComment" parameterType="String">
        delete from tbl_gymquestion
        where gymquestionseq = #{gymquestionseq}
    </delete>
    
    <update id="updateCommentCount_decrease" parameterType="String">
        update tbl_gym set commentcount = commentcount - 1 
        where gymseq = #{gymseq}
    </update>

 	<select id="getCommentreList" parameterType="String" resultType="AnswerVO">
		select gymanswerseq, fk_userid, content_reply, changestatus
		     , to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') AS registerdate
             , V.memberimg
		from tbl_gymanswer A join tbl_member V
		ON A.fk_userid = V.userid
		where A.gymquestionseq = #{gymquestionseq}
		order by gymanswerseq desc
    </select> 

	<insert id="addReComment" parameterType="AnswerVO">
		insert into tbl_gymanswer(gymanswerseq, gymquestionseq, content_reply, fk_userid)
		values(seq_gymanswerseq.nextval, #{gymquestionseq}, #{content_reply}, #{fk_userid})
	</insert>
	
	
	
	
	<update id="updateReCommentCount" parameterType="String">
		update tbl_gymquestion set recommentcount = recommentcount+1
		where gymquestionseq = #{gymquestionseq}
	</update>
	 
	<update id="updateReComment" parameterType="HashMap">
        update tbl_gymanswer set content_reply = #{content_reply}, registerdate = sysdate, changestatus = 1
        where gymanswerseq = #{gymanswerseq} 
    </update>
    
    <delete id="deleteReComment" parameterType="String">
        delete from tbl_gymanswer
        where gymanswerseq = #{gymanswerseq}
    </delete>
    
    <update id="updateReCommentCount_decrease" parameterType="String">
        update tbl_gymquestion set recommentcount = recommentcount - 1 
        where gymquestionseq = #{gymquestionseq}
    </update> 
    
    
    
    
    
    
    
        <!-- 체육관 등록하기  -->
	<select id="getGymseq" resultType="String">
		select SEQ_GYM.nextval from dual
	</select>
	
	<insert id="Gymreg" parameterType="GymVO">
	insert into tbl_gym(gymseq, gymname, fk_userid, postcode, address, detailaddress, status, info, cost, caution,
						membercount, likecount, insidestatus, orgfilename, filename, filesize, lat, lng)
	values(#{gymseq}, #{gymname}, #{fk_userid}, #{postcode}, #{address}, #{detailaddress}, 0, #{info}, #{cost}, #{caution},
  		   #{membercount}, 0, #{insidestatus}, #{orgfilename}, #{filename}, #{filesize}, #{lat}, #{lng})
	</insert>
	
	<insert id="insertGymImg" parameterType="HashMap">
		insert into tbl_gymimg(gymimgseq, gymseq, filename, orgfilename, filesize)
		values(SEQ_GYMIMG.nextval, #{gymseq}, #{filename}, #{orgfilename}, #{filesize})
	</insert>
	
	
	
	<select id="getGymAdd" resultType="GymVO">
		select lng, lat, gymseq
		from tbl_gym
	</select>
	
	
	
	
	
	<select id="getclubTotalPage" parameterType="HashMap" resultType="int">
		select ceil(count(*)/#{sizePerPage})
		from tbl_club
		where 1=1
		<if test="searchType == 'clubname' and searchWord != ''">and clubname like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'fk_userid' and searchWord != ''">and fk_userid like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'clubgym' and searchWord != ''">and clubgym like '%'||#{searchWord}||'%'</if>
	</select>
	
	<select id="select_club_paging" parameterType="HashMap" resultType="ClubVO">
		SELECT rn, clubname, fk_userid, clubgym, clubpay, clubtime, clubseq
	FROM (
    SELECT rownum rn, clubname, fk_userid, clubgym, clubpay, clubtime, clubseq
    FROM tbl_club
    WHERE 1=1
    <if test="searchType == 'clubname' and searchWord != ''">AND clubname LIKE '%' || #{searchWord} || '%'</if>
    <if test="searchType == 'fk_userid' and searchWord != ''">AND fk_userid LIKE '%' || #{searchWord} || '%'</if>
    <if test="searchType == 'clubgym' and searchWord != ''">AND clubgym LIKE '%' || #{searchWord} || '%'</if>
	)
	WHERE rn BETWEEN (TO_NUMBER(#{currentShowPageNo}) - 1) * TO_NUMBER(#{sizePerPage}) + 1 AND TO_NUMBER(#{currentShowPageNo}) * TO_NUMBER(#{sizePerPage})

	</select>
	
	<select id="getTotalClubCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_club
		where 1=1
		<if test="searchType == 'clubname' and searchWord != ''">and clubname like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'fk_userid' and searchWord != ''">and fk_userid like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'clubgym' and searchWord != ''">and clubgym like '%'||#{searchWord}||'%'</if>
	</select>
	
	
		
	<select id="getClubDetail" parameterType="String" resultType="ClubVO">
		select clubname, fk_userid,clubtel ,clubgym ,clubtime ,membercount ,clubpay
		from tbl_club
		where clubseq = #{clubseq}
	</select>
	
	
	

</mapper>
<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="JY">

	
	<!--  지역    -->
	<resultMap type="HashMap" id="cityMap"> <!-- 리스트 안에 맵을 쓰든, 그냥 맵쓰는 경우에 resultMap -->
		<result property="cityseq" column="cityseq" javaType="String"/>
		<result property="cityname" column="cityname" javaType="String"/>
	</resultMap>
	<select id="getCityList" resultMap="cityMap">
		select cityseq, cityname from tbl_city
	</select>
	
	
	<select id="getLocalList" parameterType="String" resultType="String">
		select localname from tbl_local A join tbl_city B on A.fk_cityseq = B.cityseq where cityname = #{cityname}
	</select>
	
	
	
	<!-- 동호회등록  완료 요청(파일첨부ㅇ) -->
	<insert id="add_withFile"  parameterType="ClubVO">
		insert into tbl_club(clubseq, clubname, clubimg, fk_sportseq, fk_userid, clubtel, city, local, clubgym, clubtime, membercount, clubpay, clubstatus, clubscore, wasfileName)
        values(seq_club.nextval, #{clubname},  #{clubimg}, #{fk_sportseq}, #{fk_userid}, #{clubtel}, #{city}, #{local}, #{clubgym}, #{clubtime}, #{membercount}, #{clubpay}, default, default, #{wasfileName} ) 
	</insert>
	
	<!-- 동호회 등록후 회원등급 동호회장으로  업데이트 해주기 -->
	<update id="updateRank" parameterType="String">
		update tbl_member set memberrank = 1
		where userid = #{userid}
	</update>
	
	<!-- 동호회 등록완료 하면 tbl_clubmember 에 insert 하기 -->
	<insert id="insertCmemberTbl" parameterType="Clubvo">
		insert into tbl_clubmember(fk_userid, sportseq, clubseq, status)
		values(#{fk_userid}, #{sportseq}, #{clubseq}, 1)
	</insert>
	
	
	<resultMap type="HashMap" id="sportMap"> <!-- 리스트 안에 맵을 쓰든, 그냥 맵쓰는 경우에 resultMap -->
		<result property="fleamarketseq" column="fleamarketseq" javaType="String"/>
		<result property="sportseq" column="sportseq" javaType="String"/>
		<result property="city" column="city" javaType="String"/>
		<result property="local" column="local" javaType="String"/>
		<result property="title" column="title" javaType="String"/>
		<result property="content" column="content" javaType="String"/>
		<result property="cost" column="cost" javaType="String"/>
		<result property="deal" column="deal" javaType="String"/>
		<result property="fk_userid" column="fk_userid" javaType="String"/>
		<result property="registerdate" column="registerdate" javaType="String"/>
		<result property="commentcount" column="commentcount" javaType="String"/>
		<result property="viewcount" column="viewcount" javaType="String"/>
		<result property="status" column="status" javaType="String"/>
		<result property="imgfilename" column="imgfilename" javaType="String"/>
	</resultMap>
	<select id="getSportNameList" resultMap="sportMap" parameterType="String">
		select fleamarketseq, S.sportseq, city, local, title, content, cost, deal, fk_userid, to_char(registerdate,'yyyy-mm-dd hh24:mi:ss') AS registerdate, commentcount, viewcount, status, imgfilename
		from tbl_sport S
		JOIN tbl_fleamarket F
		ON S.sportseq = F.sportseq
		where sportname = #{sportname}
	</select>


	<!-- 상품등록  완료 요청(파일첨부ㅇ) -->
	<insert id="add_withFilee"  parameterType="FleamarketVO">
		insert into tbl_fleamarket(fleamarketseq, sportseq, city, local, title, content, cost, deal, fk_userid, registerdate, password, commentcount, viewcount, status, imgfilename)
		values(seq_fleamarket.nextval, #{sportseq}, #{city}, #{local}, #{title}, #{content}, #{cost}, #{deal}, #{fk_userid}, default, #{password}, default, default, default, #{imgfilename})	
	</insert>
	
	
	<!-- 모든 상품 select 해오기 -->
	<select id="getAllItemList" resultType="FleamarketVO" >
		select fleamarketseq,  city, local, title, content, cost, deal, fk_userid, to_char(registerdate,'yyyy-mm-dd hh24:mi:ss') AS registerdate, commentcount, viewcount, status, imgfilename
		from tbl_fleamarket
	</select>
	
	<!-- 상품 전체 개수 불러오기 -->
	<select id="getItemCnt" resultType="Int" parameterType="HashMap">
		select count(*)
		from tbl_fleamarket
	</select>

	<!-- 쿠키 
	<select id="goodsDetailData" resultType="FleamarketVO" parameterType="Int">
		
	</select>
	-->
	
	
	<!-- 리턴타입이 맵일때만 resultmap -->
	<select id="checkseq" resultType="String" parameterType="HashMap">
		select count(*)
		from tbl_clubmember
		where fk_userid = #{userid} and sportseq = #{category}
	</select>
	
	
	
	<!-- 종목별 동호회 게시판 전체 게시글수 -->
	<select id="getTotalCount" resultType="Int" parameterType="HashMap">
		select clubseq, count(*) 
		from tbl_clubboard
		where fk_userid = #{fk_userid}
		group by clubseq
	</select>
	
	
	
	<!-- === #180. 파일첨부가 있는 답변형 게시판의 페이징 처리한 글목록 가져오기(페이징 처리 했으며, 검색어가 있는 것 또는 검색어 없는것 모두 포함 한 것이다. === 
	                      먼저 #168 을 주석처리한 이후에 아래와 같이 한다. -->
	 <select id="boardListSearch_withPaging" parameterType="HashMap" resultType="BoardVO">
	 
		SELECT seq, fk_userid, name, subject, readCount, regDate, commentCount 
     		 , groupno, fk_seq, depthno
     		 , fileName 
		FROM
		    (
		        SELECT rownum AS RNO
		             , seq, fk_userid, name, subject, readCount, regDate, commentCount
		             , groupno, fk_seq, depthno
		             , fileName
		        FROM 
		        (
				 select clubboardseq, clubseq, title, content, fk_userid, password, commentcount, viewcount, status, orgfilename, filename, filesize
				      , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS registerdate 
		              , groupno, fk_seq, depthno
		              , fileName
				 from tbl_board
				 where status = 1
	         <choose>
			   <when test='searchType == "subject" and searchWord != ""'>
			      and lower(subject) like '%'||lower(#{searchWord})||'%' 
			   </when>
			   <when test='searchType == "content" and searchWord != ""'>
			      and lower(content) like '%'||lower(#{searchWord})||'%' 
			   </when>
			   <when test='searchType == "subject_content" and searchWord != ""'>
			      and (lower(subject) like '%'||lower(#{searchWord})||'%' or lower(content) like '%'||lower(#{searchWord})||'%')  
			   </when>
			   <when test='searchType == "name" and searchWord != ""'>
			      and lower(name) like '%'||lower(#{searchWord})||'%' 
			   </when>
			   <otherwise></otherwise>
			 </choose>
	         start with fk_seq = 0
	         connect by prior seq = fk_seq
	         order siblings by groupno desc, seq asc
	         ) V
	    ) T     
	    WHERE RNO between #{startRno} and #{endRno}
	 </select>
	 <!-- 
        order by 로 정렬할 경우는 select 되어진 모든 데이터를 가지고 정렬을 하는 것이고,
        order siblings by 각 계층별로 정렬을 하는 것이다. 
        order by 로만 정렬을 하게 되면 계층구조가 깨질수 있기 때문에 계층구조는 그대로 유지하면서 동일 부모를 가진 자식행들 끼리의 정렬 기준을 주는 것이 order siblings by 이다.
	 -->
	
	

</mapper>
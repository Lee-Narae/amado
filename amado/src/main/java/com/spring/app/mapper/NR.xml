<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="NR">

	<select id="getLoginMember" resultType="MemberVO" parameterType="HashMap">
		select userid, name, email, postcode, address, detailaddress, extraaddress, mobile, gender, birthday, memberimg,
		       memberrank, speed, quick, power, earth, stretch, pwdchangegap, NVL( lastlogingap, trunc( months_between(sysdate, registerday) ) ) AS lastlogingap
		from
		(select userid, password, name, email, postcode, address, detailaddress, extraaddress, mobile, gender,
		       birthday, registerday, status, memberrank, gymregisterstatus, speed, quick, memberimg,
		       power, earth, stretch, idle, trunc( months_between(sysdate, lastpwdchangedate) ) AS pwdchangegap
		 from tbl_member
		 where status = 1 and userid = #{userid} and password = #{password}) A
		cross join
		(select trunc(months_between(sysdate, max(logindate))) as lastlogingap
		 from tbl_loginhistory
		 where fk_userid = #{userid}) B
	</select>
	
    <update id="updateIdle" parameterType="String">
	   	update tbl_member set idle = 1
	   	where userid = #{userid}
    </update>
    
    <insert id="insert_tbl_loginhistory">
        insert into tbl_loginhistory(loginseq, fk_userid, logindate, clientip)
        values (seq_loginhistory.nextval, #{userid}, sysdate, #{clientip})
    </insert>
    
    <select id="getClubseq" parameterType="HashMap" resultType="String">
    	select clubseq
		from tbl_clubmember
		where fk_userid = #{userid} and sportseq = #{sportseq}
    </select>


	<resultMap type="HashMap" id="club">
		<result property="clubseq" 		column="clubseq" 		javaType="String" />
		<result property="clubname" 		column="clubname" 		javaType="String" />
		<result property="clubimg" 		column="clubimg" 		javaType="String" />
		<result property="fk_sportseq" 		column="fk_sportseq" 		javaType="String" />
		<result property="fk_userid" 		column="fk_userid" 		javaType="String" />
		<result property="clubtel" 		column="clubtel" 		javaType="String" />
		<result property="city" 		column="city" 		javaType="String" />
		<result property="local" 		column="local" 		javaType="String" />
		<result property="clubgym" 		column="clubgym" 		javaType="String" />
		<result property="clubtime" 		column="clubtime" 		javaType="String" />
		<result property="membercount" 		column="membercount" 		javaType="String" />
		<result property="clubpay" 		column="clubpay" 		javaType="String" />
		<result property="clubstatus" 		column="clubstatus" 		javaType="String" />
		<result property="clubscore" 		column="clubscore" 		javaType="String" />
		<result property="name" 		column="name" 		javaType="String" />
		<result property="sportname" 		column="sportname" 		javaType="String" />
	</resultMap>
	
	<select id="getClubInfo" parameterType="String" resultMap="club">
		select clubseq, clubname, clubimg, fk_sportseq, fk_userid, clubtel, city, local, clubgym, clubtime, membercount, clubpay, clubstatus, clubscore, name, sportname
		from tbl_club A join tbl_member B
		on A.fk_userid = B.userid
		join tbl_sport C
		on A.fk_sportseq = C.sportseq
		where clubseq = #{clubseq}
	</select>


	<resultMap type="HashMap" id="cityMap">
		<result property="cityseq" column="cityseq" javaType="String"/>
		<result property="cityname" column="cityname" javaType="String"/>
	</resultMap>
	<select id="getCityList" resultMap="cityMap">
		select cityseq, cityname from tbl_city
	</select>


	<select id="getLocalList" parameterType="String" resultType="String">
		select localname from tbl_local A join tbl_city B on A.fk_cityseq = B.cityseq where cityname = #{cityname}
	</select>
	
	
	<resultMap type="HashMap" id="sport">
		<result property="sportseq" column="sportseq" javaType="String"/>
		<result property="sportname" column="sportname" javaType="String"/>
	</resultMap>
	<select id="getSportList" resultMap="sport">
		select sportseq, sportname from tbl_sport
	</select>
	
	
	<resultMap type="HashMap" id="matchMap">
		<result property="matchingregseq" column="matchingregseq" javaType="String"/>
		<result property="clubname" column="clubname" javaType="String"/>
		<result property="membercount" column="membercount" javaType="String"/>
		<result property="matchdate" column="matchdate" javaType="String"/>
		<result property="matchtime" column="matchtime" javaType="String"/>
		<result property="city" column="city" javaType="String"/>
		<result property="local" column="local" javaType="String"/>
		<result property="area" column="area" javaType="String"/>
		<result property="status" column="status" javaType="String"/>
	</resultMap>
	<select id="searchMatch" parameterType="HashMap" resultMap="matchMap">
		select matchingregseq, clubname, A.membercount,
			   substr(to_char(matchdate, 'yyyy-mm-dd hh24:mi'), 0, 10) matchdate,
			   substr(to_char(matchdate, 'yyyy-mm-dd hh24:mi'), 12) matchtime, A.city, A.local, A.area, A.status
		from tbl_matchingreg A join tbl_club B
		on A.clubseq = B.clubseq
		join tbl_sport C
		on A.sportseq = C.sportseq
		where C.sportname = #{sportname}
		<if test="cityname != ''">and A.city = #{cityname}</if>
		<if test="localname != '선택하세요'">and A.local = #{localname}</if>
		<if test="matchdate != ''">and to_char(A.matchdate, 'yyyy-mm-dd') >= #{matchdate}</if>
		<if test="matchdate == ''">and matchdate >= sysdate</if>
		order by matchdate, matchtime
	</select>
	
	
	<resultMap type="HashMap" id="getClubseq">
		<result property="clubseq" column="clubseq" javaType="String"/>
		<result property="clubname" column="clubname" javaType="String"/>
	</resultMap>
	<select id="getClubseq_forMatch" parameterType="HashMap" resultMap="getClubseq">
		select A.clubseq, clubname from tbl_clubmember A join tbl_sport B
		on A.sportseq = B.sportseq
		join tbl_club C
		on A.clubseq = C.clubseq
		where A.fk_userid = #{userid} and sportname = #{sportname}
	</select>
	
	<insert id="matchRegister" parameterType="HashMap">
		insert into tbl_matchingreg(matchingregseq, clubseq, sportseq, membercount, matchdate, city, local, area, status)
		values(SEQ_MATCHINGREG.nextval, #{clubseq}, #{sportseq}, #{membercount}, to_date(#{matchdate}, 'yyyy-mm-dd hh24:mi'), #{city}, #{local}, #{area}, 0)
	</insert>
	
	<select id="getClubseq_forReg" resultType="String" parameterType="String">
		select clubseq from tbl_club where clubname = #{clubname}
	</select>
	
	<select id="getSportseq_forReg" resultType="String" parameterType="String">
	select sportseq from tbl_sport where sportname = #{sportname}
	</select>
	
	
	<select id="getAdmin" parameterType="HashMap" resultType="MemberVO">
		select userid, name, email, postcode, address, detailaddress, extraaddress, mobile, gender, birthday
		from tbl_member
		where userid = #{userid} and password = #{password} and memberrank = 2
	</select>
	
	<select id="getMemberTotalPage" parameterType="HashMap" resultType="int">
		select ceil(count(*)/#{sizePerPage})
		from tbl_member
		where 1=1
		<if test="searchType == 'name' and searchWord != ''">and name like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'userid' and searchWord != ''">and userid like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'email' and searchWord != ''">and email like '%'||#{searchWord}||'%'</if>
	</select>
	
	<select id="select_member_paging" parameterType="HashMap" resultType="MemberVO">
		select rn, userid, name, email, gender, memberrank
		from
		(select rownum rn, userid, name, email, gender, memberrank
		from
		(select userid, name, email, gender, case memberrank when 0 then '일반회원' when 1 then '동호회장' else '관리자' end memberrank
		from tbl_member
		where 1=1
		<if test="searchType == 'name' and searchWord != ''">and name like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'userid' and searchWord != ''">and userid like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'email' and searchWord != ''">and email like '%'||#{searchWord}||'%'</if>
		order by registerday desc)
		)
		where rn between to_number(#{currentShowPageNo})*to_number(#{sizePerPage})-(to_number(#{sizePerPage})-1) and to_number(#{currentShowPageNo})*to_number(#{sizePerPage})
	</select>
	
	<select id="getTotalMemberCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_member
		where 1=1
		<if test="searchType == 'name' and searchWord != ''">and name like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'userid' and searchWord != ''">and userid like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'email' and searchWord != ''">and email like '%'||#{searchWord}||'%'</if>
	</select>
	
	
	
	<insert id="addMemberList" parameterType="HashMap">
		insert into tbl_member(userid, password, name, email, postcode, address, detailaddress, extraaddress, mobile, gender, birthday, registerday, lastpwdchangedate, status, memberrank, gymregisterstatus, speed, quick, power, earth, stretch, idle)
		values (#{userid}, #{password}, #{name}, #{email}, #{postcode}, #{address}, #{detailaddress}, #{extraaddress}, #{mobile}, #{gender}, to_char(sysdate, 'yyyy-mm-dd'), sysdate, sysdate, 1, 0, 0, 1, 1, 1, 1, 1, 0)
	</insert>
	
	
	<select id="getMemberDetail" parameterType="String" resultType="MemberVO">
		select userid, name, email, postcode, address, detailaddress, extraaddress, mobile, gender, birthday, memberimg,
		       memberrank, speed, quick, power, earth, stretch, registerday
		from tbl_member
		where userid = #{userid}
	</select>
	
	<select id="getClubCount" resultType="int">
		select count(*)
		from tbl_club
	</select>
	
	<resultMap type="HashMap" id="clubCountMap">
		<result property="sportname" column="sportname" javaType="String"/>
		<result property="cnt" column="cnt" javaType="String"/>
	</resultMap>
	<select id="getSportPerClubCount" resultMap="clubCountMap">
		select sportname, count(*) cnt
		from tbl_club A join tbl_sport B
		on A.fk_sportseq = B.sportseq
		group by B.sportname
	</select>
	
	<select id="getMemberCount" parameterType="int" resultType="int">
		select count(*)
		from tbl_member
		<if test="i == 2">where registerday >= sysdate-7</if>
		<if test="i == 3">where status = 0</if>
		<if test="i == 4">where memberrank = 0</if>
		<if test="i == 5">where memberrank = 2</if>
	</select>
	
	<select id="getMemberStatic" parameterType="String" resultType="String">
		select count(*)
		from tbl_loginhistory
		where logindate = #{str_twoWeekBefore}
	</select>
	
	<insert id="addNotice" parameterType="NoticeVO">
		insert into tbl_notice(noticeseq, title, content, registerdate, viewcount, status)
		values (SEQ_NOTICE.nextval, #{title}, #{content}, sysdate, 0, 0)
	</insert>
	
	<insert id="addNoticeWithFile" parameterType="NoticeVO">
		insert into tbl_notice(noticeseq, title, content, registerdate, viewcount, status, orgfilename, filename, filesize)
		values (SEQ_NOTICE.nextval, #{title}, #{content}, sysdate, 0, 0, #{orgfilename}, #{filename}, #{filesize})
	</insert>
	
	<select id="getNoticeTotalPage" parameterType="HashMap" resultType="int">
		select ceil(count(*)/#{sizePerPage})
		from tbl_notice
		where 1=1
		<if test="searchType == 'title' and searchWord != ''">and title like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'content' and searchWord != ''">and content like '%'||#{searchWord}||'%'</if>
	</select>
	
	<select id="select_notice_paging" parameterType="HashMap" resultType="NoticeVO">
		select rn, noticeseq, title, content, registerdate, viewcount, status, orgfilename, filename, filesize, commentcount
		from
		(select rownum rn, noticeseq, title, content, registerdate, viewcount, status, orgfilename, filename, filesize, commentcount
		from
		(select noticeseq, title, content, to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') registerdate, viewcount, status, orgfilename, filename, filesize, commentcount
		from tbl_notice
		where 1=1
		<if test="searchType == 'title' and searchWord != ''">and title like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'content' and searchWord != ''">and content like '%'||#{searchWord}||'%'</if>
		order by registerdate desc)
		)
		where rn between to_number(#{currentShowPageNo})*to_number(#{sizePerPage})-(to_number(#{sizePerPage})-1) and to_number(#{currentShowPageNo})*to_number(#{sizePerPage})
	</select>
	
	<select id="getTotalNoticeCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_notice
		where 1=1
		<if test="searchType == 'title' and searchWord != ''">and title like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'content' and searchWord != ''">and content like '%'||#{searchWord}||'%'</if>
	</select>
	
	<select id="getNoticeDetail" parameterType="HashMap" resultType="NoticeVO">
		select previousseq, previoustitle, noticeseq, title, content, registerdate, viewcount, orgfilename, filename, filesize, nextseq, nexttitle
		from 
		(
		select lag(noticeseq, 1) over(order by noticeseq desc) previousseq,
		       lag(title, 1) over(order by noticeseq desc) previoustitle,
		       noticeseq, title, content, to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') registerdate, viewcount, orgfilename, filename, filesize,
		       lead(noticeseq, 1) over(order by noticeseq desc) nextseq,
		       lead(title, 1) over(order by noticeseq desc) nexttitle
		from tbl_notice
		where status = 0
		<if test="searchType == 'title' and searchWord != ''">and title like '%'||#{searchWord}||'%'</if>
		<if test="searchType == 'content' and searchWord != ''">and content like '%'||#{searchWord}||'%'</if>
		) A
		where A.noticeseq = #{noticeseq}
	</select>
	
	<resultMap type="HashMap" id="commentMap">
		<result property="noticecommentseq" column="noticecommentseq" javaType="String"/>
		<result property="parentseq" column="parentseq" javaType="String"/>
		<result property="comment_text" column="comment_text" javaType="String"/>
		<result property="registerdate" column="registerdate" javaType="String"/>
		<result property="fk_userid" column="fk_userid" javaType="String"/>
		<result property="memberimg" column="memberimg" javaType="String"/>
	</resultMap>
	<select id="getNoticeComment" parameterType="String" resultMap="commentMap">
		select noticecommentseq, parentseq, comment_text, to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') registerdate, fk_userid, memberimg
		from tbl_noticecomment A join tbl_member B
		on A.fk_userid = B.userid
		where A.status = 1 and parentseq = #{noticeseq}
		order by registerdate
	</select>
	
	<select id="getNoticeCommentCount" parameterType="String" resultType="String">
		select count(*)
		from tbl_noticecomment
		where status = 1 and parentseq = #{noticeseq}
	</select>
	
	
	<resultMap type="HashMap" id="noticefileMap">
		<result property="filename" column="filename" javaType="String"/>
		<result property="orgfilename" column="orgfilename" javaType="String"/>
	</resultMap>
	<select id="getOrgfilename" parameterType="String" resultMap="noticefileMap">
		select filename, orgfilename from tbl_notice
		where noticeseq = #{noticeseq}
	</select>
	
	
	<delete id="deleteNotice">
		delete from tbl_notice where noticeseq = #{noticeseq}
	</delete>
	
	
	<select id="editNotice_get" parameterType="String" resultType="NoticeVO">
		select noticeseq, title, content, orgfilename from tbl_notice where noticeseq = #{noticeseq}
	</select>
	
	<update id="editNoticeBy1" parameterType="NoticeVO">
		update tbl_notice set 
		title = #{title},
		content = #{content},
		registerdate = sysdate,
		orgfilename = null,
        filename = null,
        filesize = null
        where noticeseq = #{noticeseq}
	</update>
	
	<update id="editNoticeBy2" parameterType="NoticeVO">
		update tbl_notice set 
		title = #{title},
		content = #{content},
		registerdate = sysdate,
		orgfilename = #{orgfilename},
        filename = #{filename},
        filesize = #{filesize} 
        where noticeseq = #{noticeseq}
	</update>
	
	<update id="editNoticeBy3" parameterType="NoticeVO">
		update tbl_notice set 
		title = #{title},
		content = #{content},
		registerdate = sysdate 
        where noticeseq = #{noticeseq}
	</update>
	
	<update id="updateNoticeViewcount" parameterType="String">
		update tbl_notice set viewcount = viewcount + 1
		where noticeseq = #{nocticeseq}
	</update>
	
	<insert id="insertNoticeComment" parameterType="HashMap">
		insert into tbl_noticecomment(noticecommentseq, parentseq, comment_text, registerdate, fk_userid, status)
		values (seq_noticecomment.nextval, #{parentseq}, #{comment_text}, sysdate, #{fk_userid}, 1)
	</insert>
	
	<update id="updateNoticeCommentcount" parameterType="String">
		update tbl_notice set commentcount = commentcount+1
		where noticeseq = #{parentseq}
	</update>
	
	<delete id="delNoticeComment" parameterType="String">
		delete from tbl_noticecomment where noticecommentseq = #{noticecommentseq}
	</delete>
	
	<update id="updateNoticeCommentcount_del" parameterType="String">
		update tbl_notice set commentcount = commentcount-1
		where noticeseq = #{parentseq}
	</update>
	
	<update id="editNoticeComment" parameterType="HashMap">
		update tbl_noticecomment set comment_text = #{comment_text}, registerdate = sysdate
		where noticecommentseq = #{noticecommentseq}
	</update>
	
	<select id="getSportseq" parameterType="String" resultType="String">
		select sportseq from tbl_matchingreg where matchingregseq = #{matchingregseq}
	</select>
	
	
	<resultMap type="HashMap" id="resultmap">
		<result property="clubname" column="clubname" javaType="String"/>
		<result property="clubseq" column="clubseq" javaType="String"/>
	</resultMap>
	<select id="getUserClubname" parameterType="HashMap" resultMap="resultmap">
		select clubname, A.clubseq
		from tbl_clubmember A join tbl_club B
		on A.clubseq = B.clubseq
		where A.sportseq = #{sportseq} and A.fk_userid = #{fk_userid}
	</select>
	
	<insert id="applyMatch" parameterType="HashMap">
		<if test="message != ''">
		insert into tbl_matchingapply(matchingapplyseq, matchingregseq, clubseq, membercount, message, status)
		values (SEQ_MATCHINGAPPLY.nextval, #{matchingregseq}, #{appclubseq}, #{membercount}, #{message}, 0)
		</if>
		<if test="message == ''">
		insert into tbl_matchingapply(matchingapplyseq, matchingregseq, clubseq, membercount, status)
		values (SEQ_MATCHINGAPPLY.nextval, #{matchingregseq}, #{appclubseq}, #{membercount}, 0)
		</if>
	</insert>
	
	<select id="searchApply" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_matchingapply
		where matchingregseq = #{matchingregseq} and clubseq = #{clubseq}
	</select>	
	
	<select id="findId" parameterType="HashMap" resultType="MemberVO">
		select userid from tbl_member
		where name = #{name} and email = #{email}
	</select>
	
	<select id="findpw" parameterType="HashMap" resultType="MemberVO">
		select userid from tbl_member
		where name = #{name} and userid = #{userid} and email = #{email}
	</select>
	
	<select id="checkBeforePw" parameterType="HashMap" resultType="int">
		select count(*) from tbl_member where userid = #{userid} and password = #{newpw}
	</select>
	
	<update id="findPwUpdatePw" parameterType="HashMap">
		update tbl_member set password = #{newpw}
		where userid = #{userid}
	</update>
</mapper>
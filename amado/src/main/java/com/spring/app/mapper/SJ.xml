<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SJ">

	<!-- 아이디 중복 체크 -->
	<select id="idDuplicateCheck" parameterType="String" resultType="int">
		select count(*) AS n
		from tbl_member 
		where userid = #{userid}
	</select>

	<!-- 메일 중복 체크 -->
	<select id="emailDuplicateCheck" parameterType="String" resultType="int">
		select count(*) AS n
		from tbl_member 
		where email = #{email}
	</select>
	
	<!-- 회원가입 -->
	<insert id="memberRegisterEnd" parameterType="MemberVO">
		insert into tbl_member(userid, password, name, email, postcode, address, detailaddress, extraaddress, mobile, gender, birthday, registerday, lastpwdchangedate, status, memberrank, gymregisterstatus, speed, quick, power, earth, stretch, idle, memberimg, orgfilename) 
		values(#{userid}, #{password}, #{name}, #{email}, #{postcode}, #{address}, #{detailaddress}, #{extraaddress}, #{mobile}, to_number(#{gender}), #{birthday}, default, default, default, default, default, default, default, default, default, default, default, #{memberimg}, #{orgfilename})
	</insert>
	
	<!-- 회원가입(이미지 있을 경우) -->
	<insert id="memberRegisterEnd_withFile" parameterType="MemberVO">
		insert into tbl_member(userid, password, name, email, postcode, address, detailaddress, extraaddress, mobile, gender, birthday, registerday, lastpwdchangedate, status, memberrank, gymregisterstatus, speed, quick, power, earth, stretch, idle, memberimg, orgfilename) 
		values(#{userid}, #{password}, #{name}, #{email}, #{postcode}, #{address}, #{detailaddress}, #{extraaddress}, #{mobile}, to_number(#{gender}), #{birthday}, default, default, default, default, default, default, default, default, default, default, default, #{memberimg}, #{orgfilename})
	</insert>


    
    <!-- 글쓰기 -->
   	<insert id="add" parameterType="BoardVO">
		insert into tbl_board(boardseq, title, content, fk_userid, registerdate, password, commentcount, viewcount, status, orgfilename, filename, filesize, fk_sportseq)
		values(seq_board.nextval, #{title}, #{content}, #{fk_userid}, default, #{password}, 0, 0, default, #{orgfilename}, #{filename} , to_number(#{filesize}), to_number(#{fk_sportseq}) )
	</insert>


	<!-- 페이징 처리를 안한 검색어가 없는 전체 동아리목록 보여주기 -->
	<select id="clubListNoSearch" parameterType="String" resultType="ClubVO">
		select clubseq, clubname, clubimg, fk_sportseq, fk_userid
			 , clubtel, city, local, clubgym, clubtime, membercount
			 , clubpay, clubstatus, clubscore, wasfileName, viewcount
		 , ROW_NUMBER() over(order by clubscore desc) AS rank	
 		from tbl_club
		where clubstatus = 1
		<choose>
			<when test="params == '/club/findClub.do'">
				and fk_sportseq = 1
			</when>
			<otherwise>and fk_sportseq = to_number(#{params})</otherwise>
		</choose>
		order by clubseq desc	
	</select>
	


	<select id="getClubSearchTotalPage" parameterType="HashMap" resultType="int">
		select count(*) AS totalCount
 		from tbl_club
		where clubstatus = 1		
		<choose>
			<when test="params == '/club/findClub.do'">
				and fk_sportseq = 1
			</when>
			<otherwise>and fk_sportseq = to_number(#{params})</otherwise>
		</choose>	
		<choose>
			<when test="searchType_b == 'none'"></when>
			<when test="searchType_b == 'seoul'">
				and city like '%'||'서울'||'%'
			</when>
			<when test="searchType_b == 'busan'">
				and city like '%'||'부산'||'%'
			</when>
			<when test="searchType_b == 'daegu'">
				and city like '%'||'대구'||'%'			
			</when>
			<when test="searchType_b == 'incheon'">
				and city like '%'||'인천'||'%'
			</when>
			<when test="searchType_b == 'gwangju'">
				and city like '%'||'광주'||'%'
			</when>
			<when test="searchType_b == 'daejeon'">
				and city like '%'||'대전'||'%'
			</when>
			<when test="searchType_b == 'ulsan'">
				and city like '%'||'울산'||'%'
			</when>
			<when test="searchType_b == 'sejong'">
				and city like '%'||'세종'||'%'
			</when>
			<when test="searchType_b == 'gyeonggi'">
				and city like '%'||'경기'||'%'
			</when>
			<when test="searchType_b == 'gangwon'">
				and city like '%'||'강원'||'%'
			</when>
			<when test="searchType_b == 'chung-cheong_bukdo'">
				and city like '%'||'충청북'||'%' or city like '%'||'충북'||'%'
			</when>
			<when test="searchType_b == 'chung-cheong_namdo'">
				and city like '%'||'충청남'||'%' or city like '%'||'충남'||'%'
			</when>
			<when test="searchType_b == 'jeonbuk'">
				and city like '%'||'전라북'||'%' or city like '%'||'전북'||'%'
			</when>
			<when test="searchType_b == 'jeonnam'">
				and city like '%'||'전라남'||'%' or city like '%'||'전남'||'%'
			</when>
			<when test="searchType_b == 'gyeongbuk'">
				and city like '%'||'경상북'||'%' or city like '%'||'경북'||'%'
			</when>
			<when test="searchType_b == 'gyeongnam'">
				and city like '%'||'경상남'||'%' or city like '%'||'경남'||'%'
			</when>
			<when test="searchType_b == 'jeju'">
				and city like '%'||'제주'||'%'
			</when>
			<otherwise></otherwise>
		</choose>
		
		<if test='!searchWord.equals("")'>
		    and clubname like '%' || #{searchWord} || '%'
		</if>
					
	</select>
	
	
	
	
	<!-- // === 페이징 처리를 한 검색어가 없는 전체 동호회 보여주기 === // -->
	<select id="searchPaging" parameterType="HashMap" resultType="ClubVO">
	    SELECT clubseq, clubname, clubimg, fk_sportseq, fk_userid
			 , clubtel, city, local, clubgym, clubtime, membercount
			 , clubpay, clubstatus, clubscore, wasfileName, viewcount
			 , rank	
		FROM
		(
		select row_number() over(order by clubscore desc) AS rno 
		 	 , clubseq, clubname, clubimg, fk_sportseq, fk_userid
			 , clubtel, city, local, clubgym, clubtime, membercount
			 , clubpay, clubstatus, clubscore, wasfileName, viewcount
		 , ROW_NUMBER() over(order by clubscore desc) AS rank	
 		from tbl_club
		where clubstatus = 1
		<choose>
			<when test="params == '/club/findClub.do'">
				and fk_sportseq = 1
			</when>
			<otherwise>and fk_sportseq = to_number(#{params})</otherwise>
		</choose>
		)
		where rno between to_number(#{startRno}) and to_number(#{endRno})
		<choose>
			<when test="searchType_b == 'none'"></when>
			<when test="searchType_b == 'seoul'">
				and city like '%'||'서울'||'%'
			</when>
			<when test="searchType_b == 'busan'">
				and city like '%'||'부산'||'%'
			</when>
			<when test="searchType_b == 'daegu'">
				and city like '%'||'대구'||'%'			
			</when>
			<when test="searchType_b == 'incheon'">
				and city like '%'||'인천'||'%'
			</when>
			<when test="searchType_b == 'gwangju'">
				and city like '%'||'광주'||'%'
			</when>
			<when test="searchType_b == 'daejeon'">
				and city like '%'||'대전'||'%'
			</when>
			<when test="searchType_b == 'ulsan'">
				and city like '%'||'울산'||'%'
			</when>
			<when test="searchType_b == 'sejong'">
				and city like '%'||'세종'||'%'
			</when>
			<when test="searchType_b == 'gyeonggi'">
				and city like '%'||'경기'||'%'
			</when>
			<when test="searchType_b == 'gangwon'">
				and city like '%'||'강원'||'%'
			</when>
			<when test="searchType_b == 'chung-cheong_bukdo'">
				and city like '%'||'충청북'||'%' or city like '%'||'충북'||'%'
			</when>
			<when test="searchType_b == 'chung-cheong_namdo'">
				and city like '%'||'충청남'||'%' or city like '%'||'충남'||'%'
			</when>
			<when test="searchType_b == 'jeonbuk'">
				and city like '%'||'전라북'||'%' or city like '%'||'전북'||'%'
			</when>
			<when test="searchType_b == 'jeonnam'">
				and city like '%'||'전라남'||'%' or city like '%'||'전남'||'%'
			</when>
			<when test="searchType_b == 'gyeongbuk'">
				and city like '%'||'경상북'||'%' or city like '%'||'경북'||'%'
			</when>
			<when test="searchType_b == 'gyeongnam'">
				and city like '%'||'경상남'||'%' or city like '%'||'경남'||'%'
			</when>
			<when test="searchType_b == 'jeju'">
				and city like '%'||'제주'||'%'
			</when>
			<otherwise></otherwise>
		</choose>
		
		<if test='!searchWord.equals("")'>
		    and clubname like '%' || #{searchWord} || '%'
		</if>
		
		<choose>
			<when test="searchType_a == 'rank'">
				order by rno asc	
			</when>
			<when test="searchType_a == 'memberM'">
				order by membercount desc	
			</when>
			<when test="searchType_a == 'memberL'">
				order by membercount asc	
			</when>
			<otherwise></otherwise>
		</choose>	
	
	</select>




	<!-- 총 게시물 건수 (totalCount) 구하기 - 검색이 있을 때와 검색이 없을 때로 나뉜다. -->
	<select id="getListSearchTotalPage" parameterType="HashMap" resultType="int">
		select count(*) AS totalCount
		from tbl_board
		where status = 1 
		
	    <choose>
		    <when test="params == '/community/list.do'">
		    </when>
		    <otherwise>and fk_sportseq = to_number(#{params})</otherwise>
	    </choose>		
		
		<choose>
			<when test='searchType == "title" and searchWord != "" '>
				and lower(title) like '%'||lower(#{searchWord})||'%'
			</when>
			<when test='searchType == "content" and searchWord != "" '>
				and lower(content) like '%'||lower(#{searchWord})||'%'
			</when>
			<when test='searchType == "title_content" and searchWord != "" '>
				and ( lower(title) like '%'||lower(#{searchWord})||'%'
				or    lower(content) like '%'||lower(#{searchWord})||'%' )
			</when>
			<when test='searchType == "fk_userid" and searchWord != "" '>
				and lower(fk_userid) like '%'||lower(#{searchWord})||'%'
			</when>
			<otherwise></otherwise>
		</choose>
	</select>
	
	<!-- 총 게시물 구하기(페이징) - 검색이 있을 때와 검색이 없을 때로 나뉜다. -->
	<select id="boardListSearchPaging" parameterType="HashMap" resultType="BoardVO">
		     select rno, boardseq, title, content, fk_userid, registerdate
				  , password, commentcount, viewcount, status
				  , orgfilename, filename, filesize, fk_sportseq
		     from
		          (
		           select row_number() over(order by boardseq desc) AS rno, 
		           		  boardseq, title, content, fk_userid
		           		, to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') AS registerdate
						, password, commentcount, viewcount, status
						, orgfilename, filename, filesize, fk_sportseq
		           from tbl_board
		           where status = 1
				   <choose>
					   <when test="params == '/community/list.do'">
					   </when>
					   <otherwise>and fk_sportseq = to_number(#{params})</otherwise>
				   </choose>
				   		             
				   <choose>
					   <when test='searchType == "title" and searchWord != "" '>
						   and lower(title) like '%'||lower(#{searchWord})||'%'
					   </when>
					   <when test='searchType == "content" and searchWord != "" '>
						   and lower(content) like '%'||lower(#{searchWord})||'%'
					   </when>
					   <when test='searchType == "title_content" and searchWord != "" '>
						   and ( lower(title) like '%'||lower(#{searchWord})||'%'
						   or    lower(content) like '%'||lower(#{searchWord})||'%' )
					   </when>
					   <when test='searchType == "fk_userid" and searchWord != "" '>
						   and lower(fk_userid) like '%'||lower(#{searchWord})||'%'
					   </when>
					   <otherwise></otherwise>
				   </choose>
		           order by registerdate desc
		           ) V
			  where rno between to_number(#{startRno}) and to_number(#{endRno})
	</select>	





	<select id="getView" parameterType="HashMap" resultType="BoardVO">
	   select previousseq, previoussubject, boardseq, fk_userid, 
	   		  title, content, viewcount, registerdate, password, nextseq, nextsubject, fk_sportseq
	   		, orgfilename, filename, filesize
	    FROM
	    (
	        select lag (boardseq, 1) over(order by boardseq desc) AS previousseq
	             , lag (title, 1) over(order by boardseq desc)  AS previoussubject
	             , boardseq, fk_userid, title, content, viewcount
	             , to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') AS registerdate, password
	             , lead (boardseq, 1) over(order by boardseq desc) AS nextseq
	             , lead (title, 1) over(order by boardseq desc) AS nextsubject
	             , fk_sportseq
	             , orgfilename, filename, filesize
	        from tbl_board
	        where status = 1 
	    ) V
	    WHERE V.boardseq = #{boardseq}		
	</select>	


	<!-- === 글 조회수 1 증가하기 === -->
	<update id="increase_viewcount" parameterType="String">
		update tbl_board set viewcount = viewcount + 1
		where boardseq = #{boardseq}
	</update>



	<!-- === 댓글쓰기(tbl_comment 테이블에 insert) === -->
	<insert id="addBoardComment" parameterType="BoardCommentVO">
	<!-- 첨부파일이 없는 경우 -->
	<!-- 원글쓰기 -->
		insert into tbl_boardcomment(boardcommentseq, parentseq, comment_text, registerdate, fk_userid, status, groupno, fk_boardcommentseq, depthno)
		values(seq_boardcomment.nextval, #{parentseq}, #{comment_text}, default, #{fk_userid}, default, #{groupno}, default, default)	
	</insert>


	<!-- 댓글 작성 시 카운트 증가 -->
	<update id="updateBoardCommentCount" parameterType="String">
			update tbl_board set commentcount = commentcount + 1
			where boardseq = #{parentseq}		
	</update>


	<!-- === 원게시물에 딸린 댓글들을 조회해오기 === -->
	<select id="readComment" parameterType="String" resultType="BoardCommentVO">
		select boardcommentseq, parentseq, comment_text
		     , to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') as registerdate
		     , fk_userid, status, groupno, fk_boardcommentseq, depthno
		from tbl_boardcomment
		where status = 1 and parentseq = #{parentseq}
		order by boardcommentseq desc
	</select>
	
	<!-- 댓글 삭제 -->
	<update id="deleteComment" parameterType="String">
		update tbl_boardcomment set status = 0
		where boardcommentseq = #{boardcommentseq}
	</update>

	<!-- 댓글 삭제 시 카운트 감소 -->
	<update id="updateCommentCount_decrease" parameterType="String">
			update tbl_board set commentcount = commentcount - 1
			where boardseq = #{parentseq}		
	</update>
	
	<!-- 댓글 수정 -->
	<update id="updateComment" parameterType="HashMap">
		update tbl_boardcomment set comment_text = #{comment_text} || ' (' || to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') || ') (수정됨)'
		where boardcommentseq = #{boardcommentseq}
	</update>	


	<!--  groupno 컬럼의 최대값 알아오기 -->
	<select id="getGroupnoMax" resultType="int">
		select NVL(max(groupno), 0)
		from tbl_boardcomment
	</select>
	
	<!-- 답글쓰기 -->
	<insert id="addReply" parameterType="BoardCommentVO">
		insert into tbl_boardcomment(boardcommentseq, parentseq, comment_text, registerdate, fk_userid, status, groupno, fk_boardcommentseq, depthno)
		values(seq_boardcomment.nextval, #{parentseq}, #{comment_text}, default, #{fk_userid}, default, #{groupno}, ${fk_boardcommentseq}, #{depthno}+1)	
	</insert>
	
	
	<!-- 답글이 있는지 확인 -->
	<select id="checkComment" parameterType="String" resultType="int">
		select count(*) AS totalCount
		from tbl_boardcomment
		where status = 1 and FK_BOARDCOMMENTSEQ = #{boardcommentseq}
	</select>
	
	
	<!-- 댓글에 딸린 답글 가져오기 -->
	<select id="getCommentreList" parameterType="String" resultType="BoardCommentVO">
		select boardcommentseq, parentseq, comment_text
		     , to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') as registerdate
		     , fk_userid, status, groupno, fk_boardcommentseq, depthno
		from tbl_boardcomment
		where status = 1 and fk_boardcommentseq = #{boardcommentseq}
		order by boardcommentseq desc
	</select>
	
	
	<insert id="add_withFile" parameterType="BoardVO">
		<!-- 원글쓰기인 경우 -->
		insert into tbl_board(boardseq, title, content, fk_userid, registerdate, password, commentcount, viewcount, status, orgfilename, filename, filesize, fk_sportseq)
		values(seq_board.nextval, #{title}, #{content}, #{fk_userid}, default, #{password}, 0, 0, default, #{orgfilename}, #{filename} , to_number(#{filesize}), to_number(#{fk_sportseq}) )

	</insert>
	
	<!-- ===  1개글 수정하기 === -->
    <update id="edit" parameterType="BoardVO">
        update tbl_board set title = #{title} || ' (' || to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') || ') (수정됨)'
                           , content = #{content}
        where boardseq = #{boardseq}                      
    </update>
    
	<!-- ===  첨부파일이 있는 1개글 수정하기 === -->
    <update id="edit_withFile" parameterType="BoardVO">
        update tbl_board set title = #{title} || ' (' || to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') || ') (수정됨)'
                           , content = #{content}
                           , orgfilename = #{orgfilename}
                           , filename = #{filename}
                           , filesize = to_number(#{filesize})
        where boardseq = #{boardseq}                      
    </update>
    
	<!-- ===  1개글 삭제하기 === -->
    <update id="del" parameterType="BoardVO">
        update tbl_board set status = 0
        where boardseq = #{boardseq}                      
    </update>
    
    <select id="getClubmember" parameterType="String" resultType="ClubmemberVO">
       	select fk_userid, sportseq, clubseq, status
    	from tbl_clubmember
    	where fk_userid = #{fk_userid}
    </select>
    
    <!-- // 내가 가입한 클럽 가져오기 -->
    <select id="getClubmemberList" parameterType="String" resultType="ClubmemberVO">
    	select fk_userid, sportseq, clubseq, status
    	from tbl_clubmember
    	where clubseq = #{clubseq}
    </select>
    
    
    <!-- 이미 클럽가입 신청했거나 가입됐는지 확인용 -->
    <select id="checkClubSportseq" parameterType="ClubmemberVO" resultType="int">
		select count(*) AS n
		from tbl_clubmember
		where fk_userid = #{fk_userid} and sportseq = #{sportseq}   
    </select>
    
    
    <!-- 이미 클럽가입 신청했거나 가입됐는지 확인용 -->
    <select id="getclubAry" parameterType="ClubmemberVO" resultType="int">
		select count(*) AS n1
		from tbl_clubmember
		where fk_userid = #{fk_userid} and clubseq = #{clubseq}   
    </select>
    
    <!-- 클럽 가입신청 -->
    <insert id="clubMRegisterSJ" parameterType="ClubmemberVO">
		insert into tbl_clubmember(fk_userid, sportseq, clubseq, status)
		values(#{fk_userid}, to_number(#{sportseq}), to_number(#{clubseq}), default)
    </insert>
    
    
	<insert id="Inquiry" parameterType="HashMap">
		insert into tbl_inquiry(inquiryseq, title, content, fk_userid, email, phone, registerdate, searchtype_a, searchtype_b, status, answer)
		values(seq_inquiry.nextval, #{title}, #{content}, #{fk_userid}, #{email}, #{phone}, default, to_number(#{searchtype_a}), to_number(#{searchtype_b}), default, default)
    </insert>
    
    <select id="findseq_inquiry" parameterType="HashMap" resultType="int">
	    SELECT inquiryseq
	    FROM (
	        SELECT inquiryseq
	        FROM tbl_inquiry
	        ORDER BY inquiryseq DESC
	    )
	    WHERE ROWNUM = 1
    </select>
    
    
    <insert id="InquiryFileTable" parameterType="HashMap">
		insert into tbl_inquiryFile(inquiryseq, orgfilename, filename, filesize)
		values(#{inquiryseq}, #{orgfilename}, #{filename} , to_number(#{filesize}))
    </insert>
    
    
    <!-- 멤버정보 가져오기 -->
    <select id="getMemberInfo" parameterType="String" resultType="MemberVO">
    	select userid, password, name, email, postcode, address
    	     , detailaddress, extraaddress, mobile, gender, birthday
    	     , registerday, lastpwdchangedate, status, memberrank
    	     , gymregisterstatus, speed, quick, power, earth, stretch, idle, memberimg
    	from tbl_member
    	where userid = #{fk_userid}
    </select>
    
    
    <!-- 1대1 문의 목록 가져오기 -->
	<resultMap type="HashMap" id="getinquiryList_Map">
	    <result property="inquiryseq"  		column="inquiryseq"  	javaType="String" />
	    <result property="title"  			column="title"  		javaType="String" />
	    <result property="content"  		column="content"  		javaType="String" />
	    <result property="fk_userid"  		column="fk_userid"  	javaType="String" />
	    <result property="email"  			column="email"  		javaType="String" />
	    <result property="phone"  			column="phone"  		javaType="String" />
	    <result property="registerdate"  	column="registerdate"  	javaType="String" />
	    <result property="searchtype_a"  	column="searchtype_a"  	javaType="String" />
	    <result property="searchtype_b"  	column="searchtype_b"  	javaType="String" />
	    <result property="status"  			column="status"  		javaType="String" />
	    <result property="orgfilename"  	column="orgfilename"  	javaType="String" />
	    <result property="filename"  		column="filename"  		javaType="String" />
	    <result property="filesize"  		column="filesize"  		javaType="String" />
	</resultMap>    
	<select id="getinquiryList" parameterType="String" resultMap="getinquiryList_Map">
	    WITH InquiryWithFiles AS (
	        SELECT I.inquiryseq, I.title, I.content, I.fk_userid, I.email, I.phone, I.registerdate, I.searchtype_a, I.searchtype_b, I.status, I.answer,
	               F.orgfilename, F.filename, F.filesize,
	               ROW_NUMBER() OVER (PARTITION BY I.inquiryseq ORDER BY F.filename) AS row_num
	        FROM tbl_inquiryFile F
	        JOIN tbl_inquiry I ON F.inquiryseq = I.inquiryseq
	        WHERE I.status = 1 
	        <choose>
	            <when test="fk_userid != 'admin'">
	                AND I.fk_userid = #{fk_userid}
	            </when>
	            <when test="fk_userid == 'admin'">
	            </when>
	        </choose>
	    )
	    SELECT inquiryseq, title, content, fk_userid, email, phone, registerdate, searchtype_a, searchtype_b, status, answer,
	           orgfilename, filename, filesize
	    FROM InquiryWithFiles
	    WHERE row_num = 1
	    ORDER BY inquiryseq desc, fk_userid desc 
	</select>

    
	<select id="getTotalInquiryCount" parameterType="HashMap" resultType="int">
	    select count(*)
	    from tbl_inquiry
	    where status = 1
	    <choose>
	        <when test="fk_userid != 'admin'">
	            and fk_userid = #{fk_userid}
	        </when>
	        <when test="fk_userid == 'admin'">
	        </when>
	    </choose>
	    <choose>
	        <when test='searchtype_a == "0" and searchtype_b == "0"'>
	        </when>
	        <when test='searchtype_a != "0" and searchtype_b == "0"'>
	            and searchtype_a = #{searchtype_a}
	        </when>
	        <when test='searchtype_a != "0" and searchtype_b != "0"'>
	            and searchtype_a = #{searchtype_a} and searchtype_b = #{searchtype_b}
	        </when>
	        <otherwise></otherwise>
	    </choose>
	    
	    
	    <choose>
	        <when test='searchtype_answer != "99"'>
	            and answer = #{searchtype_answer}
	        </when>
	        <otherwise></otherwise>
	    </choose>
	    <choose>
	        <when test='searchtype_fk_userid == "0" and searchWord == ""'>
	        </when>
	        <when test='searchtype_fk_userid == "0" and searchWord != ""'>
    		    and lower(content) like CONCAT(CONCAT('%', lower(#{searchWord})), '%')
	            or lower(title) like CONCAT(CONCAT('%', lower(#{searchWord})), '%')
	        </when>
	        <when test='searchtype_fk_userid != "0" and searchWord == ""'>
	        </when>
	        <when test='searchtype_fk_userid != "0" and searchWord != ""'>
	            and lower(fk_userid) like CONCAT(CONCAT('%', lower(#{searchWord})), '%')
	        </when>
	    </choose>
	</select>

    
    
    
	<select id="getPaginginquiryList" parameterType="HashMap" resultType="InquiryVO">
	    SELECT inquiryseq, title, content, fk_userid, email, phone, registerdate, searchtype_a, searchtype_b, status, answer
	    FROM (
	        SELECT row_number() over(order by inquiryseq desc) AS rno,
	               inquiryseq, title, content, fk_userid, email, phone, registerdate, searchtype_a, searchtype_b, status, answer
	        FROM tbl_inquiry
	        WHERE status = 1
	        <choose>
	            <when test="fk_userid != 'admin'">
	                and fk_userid = #{fk_userid}
	            </when>
	            <when test="fk_userid == 'admin'">
	            </when>
	        </choose>
	        <choose>
	            <when test='searchtype_a == "0" and searchtype_b == "0"'>
	            </when>
	            <when test='searchtype_a != "0" and searchtype_b == "0"'>
	                and searchtype_a = #{searchtype_a}
	            </when>
	            <when test='searchtype_a != "0" and searchtype_b != "0"'>
	                and searchtype_a = #{searchtype_a} and searchtype_b = #{searchtype_b}
	            </when>
	            <otherwise></otherwise>
	        </choose>
	        <choose>
	            <when test='searchtype_answer != "99"'>
	                and answer = #{searchtype_answer}
	            </when>
	            <otherwise></otherwise>
	        </choose>
		    <choose>
		        <when test='searchtype_fk_userid == "0" and searchWord == ""'>
		        </when>
		        <when test='searchtype_fk_userid == "0" and searchWord != ""'>
		            and lower(content) like CONCAT(CONCAT('%', lower(#{searchWord})), '%')
		            or lower(title) like CONCAT(CONCAT('%', lower(#{searchWord})), '%')
		        </when>
		        <when test='searchtype_fk_userid != "0" and searchWord == ""'>
		        </when>
		        <when test='searchtype_fk_userid != "0" and searchWord != ""'>
		            and lower(fk_userid) like CONCAT(CONCAT('%', lower(#{searchWord})), '%')
		        </when>
		    </choose>
	        ORDER BY fk_userid DESC, rno asc
	    )
	    WHERE rno BETWEEN #{startRno} AND #{endRno}
	</select>

    
    
    <select id="inquiryGoDetail" parameterType="String" resultType="InquiryVO">
	        SELECT inquiryseq, title, content, fk_userid, email, phone, registerdate, searchtype_a, searchtype_b, status, answer
	        FROM tbl_inquiry
            where inquiryseq = #{inquiryseq}
	        ORDER BY inquiryseq DESC    
    </select>


    <select id="inquiryFileGoDetail" parameterType="String" resultType="InquiryFileVO">
	        SELECT inquiryseq, orgfilename, filename, filesize
	        FROM tbl_inquiryFile
            where inquiryseq = #{inquiryseq}
	        ORDER BY inquiryseq DESC    
    </select>
    
    
    <!-- 1대1문의 첨부파일 다운로드 -->
    <select id="getView_inquiry" parameterType="HashMap" resultType="InquiryFileVO">
   	        SELECT inquiryseq, orgfilename, filename, filesize
	        FROM tbl_inquiryFile
            where inquiryseq = #{inquiryseq} and orgfilename = #{orgfilename}
    </select>
    
    
    <insert id="addInquiryAD" parameterType="HashMap">
		insert into tbl_inquiryanswers(inquiryanswerseq, inquiryseq, content, registerdate, fk_userid) 
		values(seq_inquiryanswers.nextval, to_number(#{inquiryseq}), #{content}, default, #{fk_userid})
    </insert>
    
	<update id="updateInquiryAW" parameterType="HashMap">
		update tbl_inquiry set answer = 1
		where inquiryseq = #{inquiryseq}
	</update>
    
    <select id="readInquiryAW" parameterType="String" resultType="InquiryAnswersVO">
		select inquiryanswerseq, inquiryseq, content, registerdate, fk_userid
		from tbl_inquiryanswers
		where inquiryseq = #{inquiryseq}
		order by registerdate desc
    </select>
	
	
	<delete id="delInquiryAW" parameterType="HashMap">
		delete from tbl_inquiryanswers
		where inquiryanswerseq = #{inquiryanswerseq} and inquiryseq = #{inquiryseq}
	</delete>
	
	
	<update id="editInquiryAW" parameterType="HashMap">
		update tbl_inquiryanswers set content = #{edit_comment_text} || ' (' || to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') || ') (수정됨)'
		where inquiryanswerseq = #{inquiryanswerseq}
	</update>
	
	
	<select id="getInquiryCount" parameterType="HashMap" resultType="int">
	    select count(*)
	    from tbl_inquiryanswers
	    where inquiryseq = #{inquiryseq}
	</select>
	
	
	<update id="updateAnswer" parameterType="HashMap">
		update tbl_inquiry set answer = 0
		where inquiryseq = #{inquiryseq}
	</update>
	
	
	
	<select id="rankF" parameterType="String" resultType="ClubVO">
		SELECT clubseq, clubname, clubimg, fk_sportseq, fk_userid
			 , clubtel, city, local, clubgym, clubtime, membercount
			 , clubpay, clubstatus, clubscore, wasfileName, viewcount
	         , rank
		FROM (
		    SELECT clubseq, clubname, clubimg, fk_sportseq, fk_userid
				 , clubtel, city, local, clubgym, clubtime, membercount
				 , clubpay, clubstatus, clubscore, wasfileName, viewcount
		         , ROW_NUMBER() OVER (ORDER BY clubscore DESC) AS rank
		    FROM tbl_club
		    WHERE clubstatus = 1 and fk_sportseq = to_number(#{params})
		)
		WHERE rank IN (1)
		ORDER BY rank
	</select>
	
	<select id="rankS" parameterType="String" resultType="ClubVO">
		SELECT clubseq, clubname, clubimg, fk_sportseq, fk_userid
			 , clubtel, city, local, clubgym, clubtime, membercount
			 , clubpay, clubstatus, clubscore, wasfileName, viewcount
	         , rank
		FROM (
		    SELECT clubseq, clubname, clubimg, fk_sportseq, fk_userid
				 , clubtel, city, local, clubgym, clubtime, membercount
				 , clubpay, clubstatus, clubscore, wasfileName, viewcount
		         , ROW_NUMBER() OVER (ORDER BY clubscore DESC) AS rank
		    FROM tbl_club
		    WHERE clubstatus = 1 and fk_sportseq = to_number(#{params})
		)
		WHERE rank IN (2)
		ORDER BY rank	
	</select>
	
	<select id="rankT" parameterType="String" resultType="ClubVO">
		SELECT clubseq, clubname, clubimg, fk_sportseq, fk_userid
			 , clubtel, city, local, clubgym, clubtime, membercount
			 , clubpay, clubstatus, clubscore, wasfileName, viewcount
	         , rank
		FROM (
		    SELECT clubseq, clubname, clubimg, fk_sportseq, fk_userid
				 , clubtel, city, local, clubgym, clubtime, membercount
				 , clubpay, clubstatus, clubscore, wasfileName, viewcount
		         , ROW_NUMBER() OVER (ORDER BY clubscore DESC) AS rank
		    FROM tbl_club
		    WHERE clubstatus = 1 and fk_sportseq = to_number(#{params})
		)
		WHERE rank IN (3)
		ORDER BY rank
	</select>
	
	
</mapper>